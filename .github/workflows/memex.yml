name: Add PR to project
on:
  workflow_dispatch:
  pull_request:
    types:
      - ready_for_review
jobs:
  add_pr:
    runs-on: ubuntu-latest
    steps:
      # - name: print context
      #   env:
      #     GITHUB_CONTEXT: ${{ toJSON(github) }}
      #   run: echo "$GITHUB_CONTEXT"

#       - name: Add PR to project
#         id: add_pr
#         uses: octokit/graphql-action@v2.2.20
#         with:
#           query: |
#             mutation($pr_node_id:ID!) {
#               addProjectNextItem(input: {projectId: "MDExOlByb2plY3ROZXh0MTU0OA==", contentId: $pr_node_id}) {
#                 projectNextItem {
#                   id
#                 }
#               }
#             }
#           pr_node_id: ${{ github.event.pull_request.node_id }}
#           headers: '{"GraphQL-Features": "projects_next_graphql"}'
#         env:
#           GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
                  
#       - run: "echo 'Added: ${{ steps.add_pr.outputs.data }}'"

#       - run: "echo 'Added: ${{ steps.add_pr.outputs.data.addProjectNextItem.projectNextItem.id }}'"

      - name: Get project node ID
        id: get_project_id
        run: |
          response="$( gh api graphql --header 'GraphQL-Features: projects_next_graphql' -F org=$ORG -F number=$PROJECT_NUM -f query='
            query($org: String!, $number: Int!) {
            organization(login:$org){
              projectNext(number:5) {
                id
              }
            }
          }
          ')"
          
          echo 'PROJECT_ID='$(jq '.data.organization.projectNext.id' <<< "$response") >> $GITHUB_ENV          
        env:
          GITHUB_TOKEN: ${{secrets.PERSONAL_ACCESS_TOKEN}}
          ORG: "ske-test-org"
          PROJECT_NUM: 5

      - name: Parse
        id: parse
        run: |
          echo ${{ env.PROJECT_ID }}
