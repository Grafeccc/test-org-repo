name: Add PR to project
on:
  workflow_dispatch:
  pull_request:
    types:
      - ready_for_review
jobs:
  add_pr:
    runs-on: ubuntu-latest
    steps:      
      - name: Get project data
        id: get_project_data
        run: |
          (gh api graphql --header 'GraphQL-Features: projects_next_graphql' -f query='
            query($org: String!, $number: Int!) {
            organization(login: $org){
              projectNext(number: $number) {
                id, fields(first:20) {nodes {id, name, settings}}
              }
            }
          }
          ' -F org=$ORG -F number=$PROJECT_NUM) > project_data.json
          
          echo 'PROJECT_ID='$(cat project_data.json | jq '.data.organization.projectNext.id') >> $GITHUB_ENV
          echo 'DATE_ID='$(cat project_data.json | jq '.data.organization.projectNext.fields.nodes[] | select(.name== "Date posted") | .id') >> $GITHUB_ENV
          echo 'STATUS_ID='$(cat project_data.json | jq '.data.organization.projectNext.fields.nodes[] | select(.name== "Status") | .id') >> $GITHUB_ENV
          echo 'TODO_ID='$(cat project_data.json | jq '.data.organization.projectNext.fields.nodes[] | select(.name== "Status") |.settings | fromjson.options[] | select(.name=="Todo") |.id') >> $GITHUB_ENV

        env:
          GITHUB_TOKEN: ${{secrets.PERSONAL_ACCESS_TOKEN}}
          ORG: "ske-test-org"
          PROJECT_NUM: 6

      - name: Add PR to project
        id: add_pr
        run: |
          item_id="$( gh api graphql --header 'GraphQL-Features: projects_next_graphql' -f query='
            mutation($proj:ID!, $pr:ID!) {
              addProjectNextItem(input: {projectId: $proj, contentId: $pr}) {
                projectNextItem {
                  id
                }
              }
            }
          ' -F proj=$PROJECT_ID -F pr=$PR_ID --jq '.data.addProjectNextItem.projectNextItem.id')"
          
          echo 'ITEM_ID='$item_id >> $GITHUB_ENV          
        env:
          GITHUB_TOKEN: ${{secrets.PERSONAL_ACCESS_TOKEN}}
          PROJECT_ID: ${{ env.PROJECT_ID }}
          PR_ID: ${{ github.event.pull_request.node_id }}

      - name: check
        run: |
         echo "1"
         echo $PROJECT_ID
         echo "2"
         echo $ITEM_ID
         echo "3"
         echo $STATUS_ID
         echo "4"
         echo $TODO_ID
         echo "5"
         echo $DATE_ID

        env:
          PROJECT_ID: ${{ env.PROJECT_ID }}
          ITEM_ID: ${{ env.ITEM_ID }}
          STATUS_ID: ${{ env.STATUS_ID }}
          TODO_ID: ${{ env.TODO_ID }}
          
      - name: Set status
        id: set_status
        run: |
          gh api graphql --header 'GraphQL-Features: projects_next_graphql' -f query='
            mutation($proj: ID!, $item: ID!, $field: ID!, $value: String!) {
              updateProjectNextItemField(input: {projectId: $proj, itemId: $item, fieldId: $field, value: $value}) {
                projectNextItem {
                  id
                }
              }
            }
          ' -F proj=$PROJECT_ID -F item=$ITEM_ID -F field=$STATUS_ID -F value=$TODO_ID

        env:
          GITHUB_TOKEN: ${{secrets.PERSONAL_ACCESS_TOKEN}}
          PROJECT_ID: ${{ env.PROJECT_ID }}
          ITEM_ID: ${{ env.ITEM_ID }}
          STATUS_ID: ${{ env.STATUS_ID }}
          TODO_ID: ${{ env.TODO_ID }}

      - name: Get date
        run: echo "DATE=$(date +"%Y-%m-%d")" >> $GITHUB_ENV

      - name: Set date
        id: set_date
        run: |
          gh api graphql --header 'GraphQL-Features: projects_next_graphql' -f query='
            mutation($proj: ID!, $item: ID!, $field: ID!, $value: String!) {
              updateProjectNextItemField(input: {projectId: $proj, itemId: $item, fieldId: $field, value: $value}) {
                projectNextItem {
                  id
                }
              }
            }
          ' -F proj=$PROJECT_ID -F item=$ITEM_ID -F field=$DATE_ID -F value=$DATE

        env:
          GITHUB_TOKEN: ${{secrets.PERSONAL_ACCESS_TOKEN}}
          PROJECT_ID: ${{ env.PROJECT_ID }}
          ITEM_ID: ${{ env.ITEM_ID }}
          DATE_ID: ${{ env.DATE_ID }}
          DATE: ${{ env.DATE }}
