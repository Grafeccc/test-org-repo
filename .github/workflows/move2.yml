name: Copy to Open Source Repo

# **What it does**: Copies internal issues to the open source repo
# **Why we have it**: To copy internal issues to the open source repo (since you can't transfer issues from our internal repo to the public repo)
# **Who does it impact**: Open source and docs-content maintainers

on:
  issues:
    types:
      - labeled

jobs:
  transfer-issue:
    name: Transfer issue
    runs-on: ubuntu-latest
    if: github.event.label.name == 'ready for transfer to os'
    steps:

      - name: Check if this run was triggered by a member of the docs team
        uses: actions/github-script@626af12fe9a53dc2972b48385e7fe7dec79145c9
        id: triggered-by-member
        with:
          github-token: ${{secrets.PERSONAL_ACCESS_TOKEN}} # todo change token
          result-encoding: string
          script: |
            const triggerer_login = context.payload.sender.login
            const teamMembers = await github.request(
              `/orgs/github/teams/docs/members?per_page=100`
            )
            const logins = teamMembers.data.map(member => member.login)
            if (logins.includes(triggerer_login)) {
              console.log(`This workflow was triggered by ${triggerer_login} (on the docs team).`)
              return 'true'
            }
            console.log(`This workflow was triggered by ${triggerer_login} (not on the docs team), so no action will be taken.`)
            return 'false'

      - name: Exit if not triggered by a docs team member
        if: steps.triggered-by-member.outputs.result == 'false'
        run: |
          echo Aborting. This workflow must be triggered by a member of the docs team
          exit 1

      - name: Escape code blocks
        run: echo 'ISSUE_BODY='${{ github.event.issue.body }} | tr g t >> $GITHUB_ENV
        
      - name: Create an issue in the open source repo
        run: echo 'NEW_ISSUE='$(gh issue create --title "${{ env.ISSUE_TITLE }}" --body "${{ env.ISSUE_BODY }}" --repo apm-pub-org/apm-pub-org-pub-repo) >> $GITHUB_ENV
        env:
          GITHUB_TOKEN: ${{secrets.PERSONAL_ACCESS_TOKEN}}
          ISSUE_TITLE: ${{ github.event.issue.title }}

      - name: Label the new issue
        run: gh issue edit ${{ env.NEW_ISSUE }} --add-label "help wanted"
        env:
          GITHUB_TOKEN: ${{secrets.PERSONAL_ACCESS_TOKEN}}

      - name: Comment on the old issue
        run: gh issue comment ${{ github.event.issue.html_url }} --body "This issue was transferred to the open source repo as ${{ env.NEW_ISSUE }}"
        env:
          GITHUB_TOKEN: ${{secrets.PERSONAL_ACCESS_TOKEN}}

      - name: Close the old issue
        run: gh issue close ${{ github.event.issue.html_url }}
        env:
          GITHUB_TOKEN: ${{secrets.PERSONAL_ACCESS_TOKEN}}

# TODO change PERSONAL_ACCESS_TOKEN to DOCS_BOT_FR
# TODO change repo to github/docs
